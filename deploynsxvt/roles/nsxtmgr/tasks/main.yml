---
# - name : Deploy NSX Manager OVA
#   community.vmware.vmware_deploy_ovf:
#       hostname: '{{ vcenter }}'
#       username: '{{ vcenter_user }}'
#       password: '{{ vcenter_password }}'
#       datacenter : '{{ vcenter_datacenter }}'
#       validate_certs: no
#       datastore : '{{ vcenter_datastore }}'
#       esxi_hostname : '{{ esxi_ip }}'
#       # cluster: '{{ vcenter_cluster }}'
#       name : '{{ inventory_hostname_short }}'
#       disk_provisioning: thin
#       wait: false
#       networks: 
#         "Network 1": '{{ nsx_mgmt }}'
#       ovf: '{{ manager_ova }}'
#       wait_for_ip_address: false
#       inject_ovf_env: yes
#       properties:
#           nsx_passwd_0 : '{{ nsx_passwd_0 }}'
#           nsx_cli_passwd_0 : '{{ nsx_cli_passwd_0 }}'
#           nsx_cli_audit_passwd_0 : '{{ nsx_cli_audit_passwd_0 }}'
#           nsx_hostname : '{{ inventory_hostname }}'
#           nsx_gateway_0 : '{{ nsx_gateway_0 }}'
#           nsx_ip_0 : '{{ nsx_mgr_ip }}'
#           nsx_netmask_0 : '{{ nsx_netmask_0 }}'
#           nsx_dns1_0 : '{{ nsx_dns1_0 }}'
#           nsx_domain_0 : '{{ nsx_domain_0 }}'
#           nsx_ntp_0 : '{{ nsx_ntp_0 }}'
#           nsx_isSSHEnabled : '{{ nsx_isSSHEnabled }}'
#   delegate_to : localhost

- name: Check manager status
  nsxt_manager_status:
      hostname: "{{ nsx_mgr_ip }}"
      username: "admin"
      password: "{{ nsx_passwd_0 }}"
      validate_certs: "false"
      wait_time: 50
  delegate_to: localhost

# - hosts: 127.0.0.1
#   connection: local
#   become: yes
#   vars_files:
#     - deploy_nsx_cluster_vars.yml
#   tasks:
#     - name: Register compute manager
#       nsxt_fabric_compute_managers:
#           hostname: "{{ nsx_node1.hostname }}"
#           username: "{{ nsx_username }}"
#           password: "{{ nsx_password }}"
#           validate_certs: "{{ validate_certs }}"
#           display_name: "{{ item.display_name }}"
#           server: "{{ item.mgmt_ip }}"
#           origin_type: "{{ item.origin_type }}"
#           credential:
#             credential_type: "{{ item.credential_type }}"
#             username: "{{ item.username }}"
#             password: "{{ item.password }}"
#           state: present
#       with_items:
#         - "{{compute_managers}}"